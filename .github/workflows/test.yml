# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Tests
on: [push, pull_request]

jobs:
  setup:
    name: Setup Rust
    runs-on: ubuntu-latest
    outputs:
      cargo-cache-path: ${{ steps.cache-cargo.outputs.cache-hit }}
      rust-cache-path: ${{ steps.cache-rust.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@v2
        with:
          path: /home/runner/.cargo
          key: cargo-dft-cache-

      - name: Cache Rust dependencies
        id: cache-rust
        uses: actions/cache@v2
        with:
          path: /home/runner/target
          key: target-dft-cache-

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable

  test-core:
    name: Core
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run tests (ex-FlightSQL)
        run: cargo test --features=deltalake

  test-flightsql:
    name: FlightSQL
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run FlightSQL tests
        run: |
          cargo test --features=flightsql extension_cases::flightsql -- --test-threads=1

  test-s3:
    name: S3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start LocalStack
        uses: LocalStack/setup-localstack@v0.2.3
        with:
          image-tag: 'latest'
          install-awslocal: 'true'
          configuration: DEBUG=1

      - name: Run Tests against LocalStack
        run: |
          awslocal s3 mb s3://test
          awslocal s3 mv data/aggregate_test_100.csv s3://test/
          echo "Test Execution complete!"

      - name: Run S3 tests
        run: cargo test --features=s3 extension_cases::s3

  test-functions-json:
    name: Functions-JSON
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run Functions-JSON tests
        run: cargo test --features=functions-json extension_cases::functions_json

  test-deltalake:
    name: Deltalake
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run Deltalake tests
        run: cargo test --features=deltalake extension_cases::deltalake

